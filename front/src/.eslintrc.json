{
	"env": {
		"browser": true,
		"es2021": true
	},
	"extends": ["eslint:recommended", "plugin:react/recommended", "prettier"],
	"parser": "@babel/eslint-parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": 12,
		"sourceType": "module"
	},
	"plugins": ["react", "react-hooks", "prettier"],
	"settings": {
		"react": {
			"createClass": "createReactClass", // Regex for Component Factory to use,
			// default to "createReactClass"
			"pragma": "React", // Pragma to use, default to "React"
			"fragment": "Fragment", // Fragment to use (may be a property of <pragma>), default to "Fragment"
			"version": "detect", // React version. "detect" automatically picks the version you have installed.
			// You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
			// default to latest and warns if missing
			// It will default to "detect" in the future
			"flowVersion": "0.53" // Flow version
		},
		"propWrapperFunctions": [
			// The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
			"forbidExtraProps",
			{ "property": "freeze", "object": "Object" },
			{ "property": "myFavoriteWrapper" },
			// for rules that check exact prop wrappers
			{ "property": "forbidExtraProps", "exact": true }
		],
		"componentWrapperFunctions": [
			// The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
			"observer", // `property`
			{ "property": "styled" }, // `object` is optional
			{ "property": "observer", "object": "Mobx" },
			{ "property": "observer", "object": "<pragma>" } // sets `object` to whatever value `settings.react.pragma` is set to
		],
		"formComponents": [
			// Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />
			"CustomForm",
			{ "name": "Form", "formAttribute": "endpoint" }
		],
		"linkComponents": [
			// Components used as alternatives to <a> for linking, eg. <Link to={ url } />
			"Hyperlink",
			{ "name": "Link", "linkAttribute": "to" }
		]
	},
	"rules": {
		"react/prop-types": "off",
		"indent": [
			"warn",
			"tab",
			{
				"SwitchCase": 1,
				"ignoredNodes": ["TemplateLiteral"],
				"flatTernaryExpressions": true
			}
		],
		"linebreak-style": ["error", "windows"],
		"quotes": ["error", "single"],
		"semi": ["error", "never"],
		"react/jsx-filename-extension": [
			"warn",
			{
				"extensions": [".jsx"]
			}
		],
		"import/prefer-default-export": "off",
		"jsx-quotes": ["error", "prefer-single"],
		"react/jsx-uses-vars": "error",
		"no-var": "error",
		"no-console": "warn",
		"no-unreachable-loop": "error",
		"no-unsafe-optional-chaining": "error",
		"require-atomic-updates": "error",
		"curly": "error",
		"react/prefer-stateless-function": "error",
		"default-case-last": "error",
		"arrow-spacing": "error",
		"arrow-parens": ["error", "always"],
		"no-duplicate-imports": "error",
		"react/display-name": ["off"],
		"no-unused-vars": "warn",
		"prettier/prettier": "error"
	},
	"ignorePatterns": ["node_modules", "build", "dist", "public"]
}
